public class AgentResponseProcessorForFlow {
    
    // Input wrapper class for Flow
    public class RequestWrapper {
        @InvocableVariable(required=true)
        public String jsonResponse;
    }

    // Output wrapper class for Flow
    public class ResponseWrapper {
        @InvocableVariable
        public String extractedText;
    }

    // Invocable method that Flow will call
    @InvocableMethod(label='Extract Text From Agent Response')
    public static List<ResponseWrapper> extractText(List<RequestWrapper> requests) {
        List<ResponseWrapper> responses = new List<ResponseWrapper>();
        
        for (RequestWrapper req : requests) {
            ResponseWrapper res = new ResponseWrapper();
            try {
                AgentResponse parsed = (AgentResponse) JSON.deserialize(req.jsonResponse, AgentResponse.class);
                res.extractedText = parsed.value;
            } catch (Exception e) {
                res.extractedText = 'Error: Invalid JSON input';
            }
            responses.add(res);
        }
        
        return responses;
    }
    
    // Internal class to map the JSON structure
    public class AgentResponse {
        public String type;
        public String value;
    }
}
